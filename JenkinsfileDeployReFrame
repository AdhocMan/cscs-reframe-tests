#!/usr/bin/env groovy

def latestTag = 'null'
def machines = '[dom daint eiger pilatus tsa]'
def reviewersPR = 'teojgo,ekouts'
def ebTemplate = '3.11.1'

stage('Retrieve Latest Tag') {
    node('dom') {
        dir('reframe_public') {
            latestTag = sh(returnStdout: true,
                           script: '''#!/bin/bash -l
                                      git clone https://github.com/reframe-hpc/reframe.git
                                      cd reframe
                                      git fetch --tags
                                      latestTag=$(git describe --tags $(git rev-list --tags --max-count=1))
                                      echo $latestTag
                                   ''').trim()
            deleteDir()
        }
        println "The latest tag is: ${latestTag}"
    }
}

if (latestTag == 'null') {
    println 'Could not retrieve the latest tag. Exiting...'
    currentBuild.result = 'FAILURE'
    return
}

def targetVersion = latestTag.substring(1)
println "The target version is ${targetVersion}"

stage('Production PR') {
    node('dom') {
        dir('production_repo') {
            git changelog: false, poll: false, url: 'git@github.com:eth-cscs/production.git'
            if (fileExists("easybuild/easyconfigs/r/reframe/reframe-${targetVersion}.eb"))
            {
                println "There is already an easyconfig for tag: ${latestTag}. Aborting..."
                currentBuild.result = 'ABORTED'
                return
            }

            def branchExists = sh(returnStatus: true,
                                  script: """#!/bin/bash -l
                                             git branch --list | grep reframe/${targetVersion}
                                          """)
            if (branchExists == 0)
            {
                println "There is already a branch named: reframe/${targetVersion}. Aborting..."
                currentBuild.result = 'ABORTED'
                return
            }

            sh("""#!/bin/bash -l
                  module load daint-gpu
                  module load hub
                  cd easybuild/easyconfigs/r/reframe
                  git checkout -b reframe/${targetVersion}
                  sed -r "s/(version\\s*=\\s*)'${ebTemplate}'/\\1'${targetVersion}'/g" reframe-${ebTemplate}.eb > reframe-${targetVersion}.eb
                  git add reframe-${targetVersion}.eb
                  git commit -m "Add recipe for ReFrame version ${targetVersion}"
                  git push origin HEAD
                  hub pull-request -r ${reviewersPR} -m "${machines} Add recipe for ReFrame version ${targetVersion}"
               """)
        deleteDir()
        }
    }
}
